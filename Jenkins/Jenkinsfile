pipeline {
    agent any

    environment {
        tfHome = tool name: 'terraform'
        PATH = "${tfHome}:${PATH}"
    }

    stages {
        stage('Generate Key-Value Pair') {
            steps {
                script {
                    if ( !fileExists('mykey') ) {
                        sh 'ssh-keygen -f ./infrastructure/mykey'
                    } else {
                        echo 'Key-pair files already generated!'
                    }
                }
            }
        }

        stage('Ensure Terraform Installation') {
            steps { sh 'terraform --version' }
        }

        stage('Terraform | Plan & Apply') {
            steps {
                dir('infrastructure') {
                    sh 'terraform init'
                    sh '''
                    sudo terraform plan --out=plan \
                         -var access_key=${ACCESS_KEY} \
                         -var secre_key=${SECRET_KEY} \
                         -var instance_region=${REGION} \
                         -var bucket_name=${BUCKET_NAME} \
                         -var bucket_region=${BUCKET_REGION}
                    '''
                    sh 'terraform apply plan'
                }
            }
        }

        stage('Run Simulator') {
            steps {
                sh '''
                    ssh -i ./infrastructure/mykey \
                        ec2-user@$(terraform output instance-public-ip) \
                        '/simulator/run_simulator.sh ${ACCESS_KEY} ${SECRET_KEY} ${REGION} ${BUCKET_NAME}'
                '''
            }
        }

        stage('Terraform | Destroy') {
            steps { sh 'terraform destroy -auto-approve' }
        }
    }
}